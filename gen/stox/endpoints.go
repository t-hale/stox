// Code generated by goa v3.11.3, DO NOT EDIT.
//
// stox endpoints
//
// Command:
// $ goa gen github.com/t-hale/stox/design

package stox

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "stox" service endpoints.
type Endpoints struct {
	Plan goa.Endpoint
}

// NewEndpoints wraps the methods of the "stox" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Plan: NewPlanEndpoint(s),
	}
}

// Use applies the given middleware to all the "stox" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Plan = m(e.Plan)
}

// NewPlanEndpoint returns an endpoint function that calls the method "plan" of
// service "stox".
func NewPlanEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*VestingPlanRequest)
		return s.Plan(ctx, p)
	}
}
