#name: GitHub Actions Demo
#run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
#on: [push]
#jobs:
#  pull-request-status-checks:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Setup env vars
#        run: |
#          echo "GOPATH=/home/runner/go" >> "$GITHUB_ENV"
#          echo "PATH=$PATH:/home/runner/go/bin" >> "$GITHUB_ENV"
#      - name: Checkout codebase
#        uses: actions/checkout@v4
#      - name: Install goa
#        run: go install goa.design/goa/v3/cmd/goa@v3
#      - name: Generate Server, CLI and Service definitions
#        run: goa gen github.com/t-hale/stox/design
#      - name: Run gazelle to generate BUILD files
#        run: bazel run //:gazelle
#      - name: Build the stox service
#        run: bazel build :stox
#        run:  bazel run :stox_test
#      - name: Run unit tests

options:
  dynamic_substitutions: true
  env:
    - "GOPATH=$_GOPATH"
    - "GOCACHE=$_GOCACHE"
    - "GOTMPDIR=$_GOTMPDIR"
substitutions:
#  _BAZEL_IMAGE : "us-docker.pkg.dev/subtle-canto-412404/docker/ubuntu"
  _BAZEL_IMAGE : "gcr.io/cloud-builders/bazel:6.2.1"
  _GO_IMAGE : "golang:1.21"
  _GOPATH : "/workspace/go"
  _GOCACHE : "/workspace/go/cache"
  _GOTMPDIR : "/workspace/go/tmp"
steps:
  - id: "Create GOTMPDIR"
    name: ubuntu
    entrypoint: bash
    args: [ "-c", "mkdir -p /workspace/go/tmp" ]
  - id: "Install goa"
    name: "$_GO_IMAGE"
    entrypoint: "go"
    args : ["install", "goa.design/goa/v3/cmd/goa@v3"]
  - id: "Generate goa files"
    name: "$_GO_IMAGE"
    entrypoint: "$_GOPATH/bin/goa"
    args: ["gen", "github.com/t-hale/stox/design"]
  - id: "Run gazelle"
    name : "$_BAZEL_IMAGE"
    args : ["run", ":gazelle"]
  - id: "Build the stox service"
    name : "$_BAZEL_IMAGE"
    args : ["build", ":stox"]
  - id: "Run unit tests"
    name: "$_BAZEL_IMAGE"
    args: [ "run", ":stox_test"]
